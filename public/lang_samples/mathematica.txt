(* Defining a simple function *)
f[x_] := x^2 + 3*x + 2

(* Display the function *)
Print["Function: ", f[x]]

(* Solve the equation f(x) = 0 *)
solutions = Solve[f[x] == 0, x]
Print["Solutions to f(x) = 0: ", solutions]

(* Plot the function *)
Plot[f[x], {x, -5, 5}, PlotTitle -> "Plot of f(x) = x^2 + 3x + 2",
  AxesLabel -> {"x", "f(x)"}]

(* Matrix operations *)
matrixA = {{1, 2}, {3, 4}};
matrixB = {{5, 6}, {7, 8}};
matrixProduct = matrixA.matrixB
Print["Matrix Product: ", matrixProduct]

(* Define a symbolic expression *)
expr = x^3 + 2*x^2 + x + 5;
simplifiedExpr = Simplify[expr]
Print["Simplified Expression: ", simplifiedExpr]

(* Differentiate the expression *)
derivativeExpr = D[expr, x]
Print["Derivative: ", derivativeExpr]

(* Solve an equation symbolically *)
eqn = x^3 + 2*x^2 + 5 == 0;
solutions2 = Solve[eqn, x]
Print["Solutions to the equation: ", solutions2]

(* Create a list and apply a map function *)
numbers = {1, 2, 3, 4, 5};
squaredNumbers = numbers /. x_Real :> x^2
Print["Squared numbers: ", squaredNumbers]
